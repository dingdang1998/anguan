<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oket.ccic.mapper.CompanyMapper">
    <resultMap id="Company" type="com.oket.ccic.entity.Company">
        <result property="id" column="id" javaType="java.lang.Integer"/>
        <result property="companyName" column="company_name" javaType="java.lang.String"/>
        <result property="address" column="address" javaType="java.lang.String"/>
        <result property="companyTel" column="company_tel" javaType="java.lang.String"/>
        <result property="companyMobileTel" column="company_mobile_tel" javaType="java.lang.String"/>
        <result property="companyFax" column="company_fax" javaType="java.lang.String"/>
        <result property="companyEmail" column="company_email" javaType="java.lang.String"/>
        <result property="accountNum" column="account_num" javaType="java.lang.Integer"/>
        <result property="status" column="status" javaType="java.lang.Byte"/>
    </resultMap>
    <resultMap id="CompanyVo" type="com.oket.ccic.vo.CompanyVo" extends="Company">
        <collection property="tankFields" ofType="com.oket.ccic.entity.TankField">
            <result property="id" column="tank_field_id" javaType="java.lang.Integer"/>
            <result property="tankFieldName" column="tank_field_name" javaType="java.lang.String"/>
            <result property="tankFieldAddress" column="tank_field_address" javaType="java.lang.String"/>
            <result property="tankFieldPrincipal" column="tank_field_principal" javaType="java.lang.String"/>
            <result property="tankFieldPhone" column="tank_field_phone" javaType="java.lang.String"/>
            <result property="status" column="tankField_status" javaType="java.lang.Byte"/>
            <result property="companyId" column="tankField_companyId" javaType="java.lang.Integer"/>
        </collection>
    </resultMap>
    <insert id="addCompany" keyProperty="id" useGeneratedKeys="true">
      insert into bd_company (company_name, address,
      status, company_tel, company_mobile_tel, company_fax,
      company_email,account_num)
      values (#{company.companyName,jdbcType=VARCHAR}, #{company.address,jdbcType=VARCHAR}, #{company.status,jdbcType=TINYINT},
      #{company.companyTel,jdbcType=VARCHAR}, #{company.companyMobileTel,jdbcType=VARCHAR}, #{company.companyFax,jdbcType=VARCHAR}, #{company.companyEmail,jdbcType=VARCHAR},
      #{company.accountNum,jdbcType=INTEGER})
    </insert>
    <update id="updateCompany">
        update bd_company
        <set>
            <if test="company.companyName != null">
                company_name = #{company.companyName,jdbcType=VARCHAR},
            </if>
            <if test="company.address != null">
                address = #{company.address,jdbcType=VARCHAR},
            </if>
            <if test="company.companyTel != null">
                company_tel = #{company.companyTel,jdbcType=VARCHAR},
            </if>
            <if test="company.companyMobileTel != null">
                company_mobile_tel = #{company.companyMobileTel,jdbcType=VARCHAR},
            </if>
            <if test="company.companyFax != null">
                company_fax = #{company.companyFax,jdbcType=VARCHAR},
            </if>
            <if test="company.companyEmail != null">
                company_email = #{company.companyEmail,jdbcType=VARCHAR},
            </if>
            <if test="company.accountNum != null">
                account_num = #{company.accountNum,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{company.id,jdbcType=INTEGER}
    </update>
    <update id="updateStatusByCompanyId">
        update bd_company
        set status = #{status,jdbcType=TINYINT}
        where id = #{companyId,jdbcType=INTEGER}
    </update>
    <select id="getPage" resultMap="CompanyVo">
        select c.*,tf.id as tank_field_id,tf.tank_field_name as tank_field_name,tf.tank_field_address as
        tank_field_address,
        tf.tank_field_principal as tank_field_principal,tf.tank_field_phone as tank_field_phone,tf.status as
        tankField_status,
        tf.company_id as tankField_companyId
        from bd_company c
        left join bd_tank_field tf on c.id = tf.company_id where 1=1
        <if test="companyName !=null and companyName!=''">
            and c.company_name like concat('%',#{companyName},'%')
        </if>
        <if test="companyId !=null">
            and c.id = #{companyId}
        </if>
        <if test="pageNum!=null and pageSize!=null">
            limit #{pageNum},#{pageSize}
        </if>
    </select>
    <select id="getPageTotal" resultType="java.lang.Long">
        select count(*) from bd_company c where 1=1
        <if test="companyName !=null and companyName!=''">
            and c.company_name like concat('%',#{companyName},'%')
        </if>
    </select>
    <select id="getAccountNum" resultType="java.lang.Integer">
        select account_num from bd_company where id = #{companyId}
    </select>
    <select id="getCompanyStatusByCompanyId" resultType="java.lang.Byte">
        select status from bd_company where id = #{companyId}
    </select>
</mapper>